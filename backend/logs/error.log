{"level":"error","message":"Database error: \nInvalid `prisma.user.findUnique()` invocation in\nC:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth.ts:98:44\n\n  95 const { email, password, firstName, lastName, organizationName } = req.body;\n  96 \n  97 // Check if user already exists\n→ 98 const existingUser = await prisma.user.findUnique(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:13\n   | \n12 |   provider = \"postgresql\"\n13 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1","service":"workflowiq-backend","target":"user.findUnique","timestamp":"2025-06-08T17:30:12.816Z"}
{"clientVersion":"5.22.0","level":"error","message":"Registration error: \nInvalid `prisma.user.findUnique()` invocation in\nC:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth.ts:98:44\n\n  95 const { email, password, firstName, lastName, organizationName } = req.body;\n  96 \n  97 // Check if user already exists\n→ 98 const existingUser = await prisma.user.findUnique(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:13\n   | \n12 |   provider = \"postgresql\"\n13 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1","name":"PrismaClientInitializationError","service":"workflowiq-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\nC:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth.ts:98:44\n\n  95 const { email, password, firstName, lastName, organizationName } = req.body;\n  96 \n  97 // Check if user already exists\n→ 98 const existingUser = await prisma.user.findUnique(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:13\n   | \n12 |   provider = \"postgresql\"\n13 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1\n    at $n.handleRequestError (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async <anonymous> (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth.ts:98:26)","timestamp":"2025-06-08T17:30:12.818Z"}
{"level":"error","message":"Database error: \nInvalid `prisma.user.findUnique()` invocation in\nC:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth.ts:98:44\n\n  95 const { email, password, firstName, lastName, organizationName } = req.body;\n  96 \n  97 // Check if user already exists\n→ 98 const existingUser = await prisma.user.findUnique(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:13\n   | \n12 |   provider = \"postgresql\"\n13 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1","service":"workflowiq-backend","target":"user.findUnique","timestamp":"2025-06-08T17:30:26.264Z"}
{"clientVersion":"5.22.0","level":"error","message":"Registration error: \nInvalid `prisma.user.findUnique()` invocation in\nC:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth.ts:98:44\n\n  95 const { email, password, firstName, lastName, organizationName } = req.body;\n  96 \n  97 // Check if user already exists\n→ 98 const existingUser = await prisma.user.findUnique(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:13\n   | \n12 |   provider = \"postgresql\"\n13 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1","name":"PrismaClientInitializationError","service":"workflowiq-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\nC:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth.ts:98:44\n\n  95 const { email, password, firstName, lastName, organizationName } = req.body;\n  96 \n  97 // Check if user already exists\n→ 98 const existingUser = await prisma.user.findUnique(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:13\n   | \n12 |   provider = \"postgresql\"\n13 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1\n    at $n.handleRequestError (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async <anonymous> (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth.ts:98:26)","timestamp":"2025-06-08T17:30:26.265Z"}
{"level":"error","message":"Database error: \nInvalid `prisma.user.findUnique()` invocation in\nC:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth.ts:196:36\n\n  193 const { email, password } = req.body;\n  194 \n  195 // Find user\n→ 196 const user = await prisma.user.findUnique(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:13\n   | \n12 |   provider = \"postgresql\"\n13 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1","service":"workflowiq-backend","target":"user.findUnique","timestamp":"2025-06-08T17:30:43.779Z"}
{"clientVersion":"5.22.0","level":"error","message":"Login error: \nInvalid `prisma.user.findUnique()` invocation in\nC:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth.ts:196:36\n\n  193 const { email, password } = req.body;\n  194 \n  195 // Find user\n→ 196 const user = await prisma.user.findUnique(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:13\n   | \n12 |   provider = \"postgresql\"\n13 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1","name":"PrismaClientInitializationError","service":"workflowiq-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\nC:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth.ts:196:36\n\n  193 const { email, password } = req.body;\n  194 \n  195 // Find user\n→ 196 const user = await prisma.user.findUnique(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:13\n   | \n12 |   provider = \"postgresql\"\n13 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1\n    at $n.handleRequestError (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async <anonymous> (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth.ts:196:18)","timestamp":"2025-06-08T17:30:43.780Z"}
{"level":"error","message":"Database error: \nInvalid `prisma.user.findUnique()` invocation in\nC:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth.ts:196:36\n\n  193 const { email, password } = req.body;\n  194 \n  195 // Find user\n→ 196 const user = await prisma.user.findUnique(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:13\n   | \n12 |   provider = \"postgresql\"\n13 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1","service":"workflowiq-backend","target":"user.findUnique","timestamp":"2025-06-08T17:30:46.978Z"}
{"clientVersion":"5.22.0","level":"error","message":"Login error: \nInvalid `prisma.user.findUnique()` invocation in\nC:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth.ts:196:36\n\n  193 const { email, password } = req.body;\n  194 \n  195 // Find user\n→ 196 const user = await prisma.user.findUnique(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:13\n   | \n12 |   provider = \"postgresql\"\n13 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1","name":"PrismaClientInitializationError","service":"workflowiq-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\nC:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth.ts:196:36\n\n  193 const { email, password } = req.body;\n  194 \n  195 // Find user\n→ 196 const user = await prisma.user.findUnique(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:13\n   | \n12 |   provider = \"postgresql\"\n13 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1\n    at $n.handleRequestError (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async <anonymous> (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth.ts:196:18)","timestamp":"2025-06-08T17:30:46.979Z"}
{"level":"error","message":"Database error: \nInvalid `prisma.user.findUnique()` invocation in\nC:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth.ts:98:44\n\n  95 const { email, password, firstName, lastName, organizationName } = req.body;\n  96 \n  97 // Check if user already exists\n→ 98 const existingUser = await prisma.user.findUnique(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:13\n   | \n12 |   provider = \"postgresql\"\n13 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1","service":"workflowiq-backend","target":"user.findUnique","timestamp":"2025-06-08T17:33:14.540Z"}
{"clientVersion":"5.22.0","level":"error","message":"Registration error: \nInvalid `prisma.user.findUnique()` invocation in\nC:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth.ts:98:44\n\n  95 const { email, password, firstName, lastName, organizationName } = req.body;\n  96 \n  97 // Check if user already exists\n→ 98 const existingUser = await prisma.user.findUnique(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:13\n   | \n12 |   provider = \"postgresql\"\n13 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1","name":"PrismaClientInitializationError","service":"workflowiq-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\nC:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth.ts:98:44\n\n  95 const { email, password, firstName, lastName, organizationName } = req.body;\n  96 \n  97 // Check if user already exists\n→ 98 const existingUser = await prisma.user.findUnique(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:13\n   | \n12 |   provider = \"postgresql\"\n13 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1\n    at $n.handleRequestError (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async <anonymous> (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth.ts:98:26)","timestamp":"2025-06-08T17:33:14.542Z"}
{"level":"error","message":"Database error: \nInvalid `prisma.user.findUnique()` invocation in\nC:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth.ts:98:44\n\n  95 const { email, password, firstName, lastName, organizationName } = req.body;\n  96 \n  97 // Check if user already exists\n→ 98 const existingUser = await prisma.user.findUnique(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:13\n   | \n12 |   provider = \"postgresql\"\n13 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1","service":"workflowiq-backend","target":"user.findUnique","timestamp":"2025-06-08T17:48:11.702Z"}
{"clientVersion":"5.22.0","level":"error","message":"Registration error: \nInvalid `prisma.user.findUnique()` invocation in\nC:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth.ts:98:44\n\n  95 const { email, password, firstName, lastName, organizationName } = req.body;\n  96 \n  97 // Check if user already exists\n→ 98 const existingUser = await prisma.user.findUnique(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:13\n   | \n12 |   provider = \"postgresql\"\n13 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1","name":"PrismaClientInitializationError","service":"workflowiq-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\nC:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth.ts:98:44\n\n  95 const { email, password, firstName, lastName, organizationName } = req.body;\n  96 \n  97 // Check if user already exists\n→ 98 const existingUser = await prisma.user.findUnique(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:13\n   | \n12 |   provider = \"postgresql\"\n13 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1\n    at $n.handleRequestError (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async <anonymous> (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth.ts:98:26)","timestamp":"2025-06-08T17:48:11.703Z"}
{"level":"error","message":"Database error: \nInvalid `prisma.user.findUnique()` invocation in\nC:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth.ts:106:44\n\n  103 }\n  104 \n  105 // Check if user already exists\n→ 106 const existingUser = await prisma.user.findUnique(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:13\n   | \n12 |   provider = \"postgresql\"\n13 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1","service":"workflowiq-backend","target":"user.findUnique","timestamp":"2025-06-08T17:50:11.591Z"}
{"clientVersion":"5.22.0","level":"error","message":"Registration error: \nInvalid `prisma.user.findUnique()` invocation in\nC:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth.ts:106:44\n\n  103 }\n  104 \n  105 // Check if user already exists\n→ 106 const existingUser = await prisma.user.findUnique(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:13\n   | \n12 |   provider = \"postgresql\"\n13 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1","name":"PrismaClientInitializationError","service":"workflowiq-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.user.findUnique()` invocation in\nC:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth.ts:106:44\n\n  103 }\n  104 \n  105 // Check if user already exists\n→ 106 const existingUser = await prisma.user.findUnique(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:13\n   | \n12 |   provider = \"postgresql\"\n13 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1\n    at $n.handleRequestError (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async <anonymous> (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth.ts:106:26)","timestamp":"2025-06-08T17:50:11.592Z"}
{"level":"error","message":"Mock registration error: secretOrPrivateKey must have a value","service":"workflowiq-backend","stack":"Error: secretOrPrivateKey must have a value\n    at module.exports [as sign] (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\node_modules\\jsonwebtoken\\sign.js:111:20)\n    at generateTokens (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth-mock.ts:13:27)\n    at <anonymous> (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth-mock.ts:68:43)","timestamp":"2025-06-08T17:58:24.725Z"}
{"level":"error","message":"Mock registration error: secretOrPrivateKey must have a value","service":"workflowiq-backend","stack":"Error: secretOrPrivateKey must have a value\n    at module.exports [as sign] (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\node_modules\\jsonwebtoken\\sign.js:111:20)\n    at generateTokens (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth-mock.ts:13:27)\n    at <anonymous> (C:\\Users\\vince\\OneDrive\\Desktop\\Side-project\\other\\project1\\backend\\src\\routes\\auth-mock.ts:68:43)","timestamp":"2025-06-08T18:00:10.895Z"}
